title = element_text(size=20)
#axis.text.x  = element_text(angle=90, vjust=0.5, size=16)
)
lm(APStand ~ WITStand, data = perfBias) %>%
summary()
longWIT = read.delim("PDPestimatesWITlong.txt")
longAP = read.delim("PDPestimatesAPlong.txt")
# make separate data sets for estimates that separate by race
# WIT
longWITsep = longWIT[!(longWIT$Type == "PDPbiasDiff"),]
longWITsep = longWITsep[grep("White|Black", longWITsep$Type),]
# correct factor levels for Type
longWITsep$Type = factor(longWITsep$Type)
# AP
longAPsep = longAP[!(longAP$Type == "PDPbiasDiff"),]
longAPsep = longAPsep[grep("White|Black", longAPsep$Type),]
# correct factor levels for Type
longAPsep$Type = factor(longAPsep$Type)
# make Subject a factor in order to do anovas
longWIT$Subject = as.factor(longWIT$Subject)
longAP$Subject = as.factor(longAP$Subject)
longWITsep$Subject = as.factor(longWITsep$Subject)
longAPsep$Subject = as.factor(longAPsep$Subject)
aov(value ~ PrimeType + Error(Subject/(PrimeType)), data = longWITsep[longWITsep$Estimate == "A",]) %>%
summary()
.1116/(.1116+1.9319)
aov(value ~ PrimeType + Error(Subject/(PrimeType)), data = longWITsep[longWITsep$Estimate == "C",]) %>%
summary()
.0369/(.0369+.8935)
aov(value ~ PrimeType + Error(Subject/(PrimeType)), data = longAPsep[longAPsep$Estimate == "A",]) %>%
summary()
.0111/(.0111+1.6813)
aov(value ~ PrimeType + Error(Subject/(PrimeType)), data = longAPsep[longAPsep$Estimate == "C",]) %>%
summary()
.1355/(.1355+.8864)
# need to make data set with subjects that have both task data
wideWIT = read.delim("PDPestimatesWITwide.txt")
wideAP = read.delim("PDPestimatesAPwide.txt")
pdpBoth = select(wideWIT, c(Subject, Observer, Black_C, Black_A, White_C, White_A, MeanC, AResids, CResids)) %>%
rename(        WIT_BlackC = Black_C,
WIT_BlackA = Black_A,
WIT_WhiteA = White_A,
WIT_WhiteC = White_C,
WIT_MeanC = MeanC,
WIT_AResid = AResids,
WIT_CResid = CResids)
pdpBoth = pdpBoth[pdpBoth$Subject %in% wideAP$Subject,] %>%
left_join(select(wideAP, c(Subject, Observer, Black_C, Black_A, White_C, White_A, MeanC, AResids, CResids)), by = "Subject")
pdpBoth = rename(pdpBoth,
AP_BlackC = Black_C,
AP_BlackA = Black_A,
AP_WhiteA = White_A,
AP_WhiteC = White_C,
AP_MeanC = MeanC,
AP_AResid = AResids,
AP_CResid = CResids,
Observer = Observer.x) %>%
select(-Observer.y)
# make standardized PDP estimates
pdpStand = pdpBoth[,1:2]  # make new data.frame, just bring in subject numbers and observer condition
# add standardized estimates for MeanC and AResid for each task
pdpStand$WIT_MeanC = scale(pdpBoth$WIT_MeanC)   # scale() is equivalent to (x-mean(x))/sd(x)
pdpStand$WIT_AResid = scale(pdpBoth$WIT_AResid)
pdpStand$WIT_CResid = scale(pdpBoth$WIT_CResid)
pdpStand$AP_MeanC = scale(pdpBoth$AP_MeanC)
pdpStand$AP_AResid = scale(pdpBoth$AP_AResid)
pdpStand$AP_CResid = scale(pdpBoth$AP_CResid)
lm(AP_MeanC ~ WIT_MeanC, data = pdpStand) %>%
summary()
lm(WIT_AResid ~ AP_AResid, data = pdpStand) %>%
summary()
# rearrange data so it can be plotted
dat1 = select(pdpStand, Subject, contains("MeanC")) %>%
rename(WIT = WIT_MeanC,
AP = AP_MeanC)
dat1$Type = "MeanC"
dat2 = select(pdpStand, Subject, contains("AResid")) %>%
rename(WIT = WIT_AResid,
AP = AP_AResid)
dat2$Type = "AResid"
SSC = rbind(dat1, dat2)
lm(WIT ~ AP*Type, data = SSC) %>%
summary()
class(SSC$Type)
class(SSC$AP)
head(SSC)
SSC$Type = factor(SSC$Type)
lm(WIT ~ AP*Type, data = SSC) %>%
summary()
dat.cond$Observer = as.character(dat.cond$Observer)
for (i in unique(perfBias$Subject)) {
perfBias$Observer[perfBias$Subject == i] = dat.cond$Observer[dat.cond$TrialType == "WITnumErr_bw" &
dat.cond$Subject == i]
}
# rearrange to long form (just standardized data)
pbLong = select(perfBias, -contains("con"), -contains("perfBias")) %>%
gather(Task,pbStand,2:3)                   # "Task" is what previous column names go into
# "pbStand" is what data points go into
ggplot(pbLong, aes(Task, pbStand, fill = Observer)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=.9), width = .2) +
#  facet_wrap(~Task*Observer) +
ggtitle("Performance bias (P(errors|incon) - P(errors|congruent))") +
labs(x = "Task", y = "Performance bias") +
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
title = element_text(size=20),
axis.text.x  = element_text(vjust=0.5, size=16, color = "black")
)
# change observer to factors for anovas
pbLong$Observer = as.character(pbLong$Observer)
aov(pbStand ~ (Observer*Task) +Error(Subject/(Task)), data = pbLong) %>%
summary()
0.000001/(105.5) # partial eta-sq = .51
aov(pbStand ~ (Observer*Task) +Error(Subject/(Task)), data = pbLong) %>%
summary()
ggplot(pbLong, aes(Task, pbStand, fill = Observer)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=.9), width = .2) +
#  facet_wrap(~Task*Observer) +
ggtitle("Performance bias (P(errors|incon) - P(errors|congruent))") +
labs(x = "Task", y = "Performance bias") +
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
title = element_text(size=20),
axis.text.x  = element_text(vjust=0.5, size=16, color = "black")
)
2.17/(2.17+70.35)
aov(pbStand ~ Observer, data = pbLong[pbLong$Task == "APStand",]) %>%
summary()
aov(pbStand ~ Observer, data = pbLong[pbLong$Task == "WITStand",]) %>%
summary()
ggplot(pdpStand2, aes(Task, AResid, fill = Observer)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=.9), width = .2) +
#  facet_wrap(~Task*Observer) +
ggtitle("AResid") +
labs(x = "Task", y = "Task auto estimate") +
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
title = element_text(size=20),
axis.text.x  = element_text(vjust=0.5, size=16, color = "black")
)
temp1 = pdpStand[,1:5] %>%    # Takes just WIT data
rename(MeanC = WIT_MeanC,
CResid = WIT_CResid,
AResid = WIT_AResid)
temp1$Task = "WIT"
temp2 = rename(pdpStand[,c(1:2, 6:8)],     # Takes just AP data
MeanC = AP_MeanC,
CResid = AP_CResid,
AResid = AP_AResid)
temp2$Task = "AP"
# Bind WIT and AP data together
pdpStand2 = rbind(temp1, temp2)
# Add IMS/EMS data
for (i in unique(pdpStand2$Subject)) {
pdpStand2$IMS[pdpStand2$Subject == i] = dat.trial$IMS[dat.trial$Subject == i &
dat.trial$SubTrial == 1 &
dat.trial$blockName == "WIT"]
pdpStand2$EMS[pdpStand2$Subject == i] = dat.trial$EMS[dat.trial$Subject == i &
dat.trial$SubTrial == 1 &
dat.trial$blockName == "WIT"]
}
# Adjust classes of variables
pdpStand2$Subject = factor(pdpStand2$Subject)
pdpStand2$MeanC = as.numeric(pdpStand2$MeanC)
pdpStand2$AResid = as.numeric(pdpStand2$AResid)
pdpStand2$CResid = as.numeric(pdpStand2$CResid)
pdpStand2$Task = factor(pdpStand2$Task)
length(unique(pdpStand2$Subject[(is.na(pdpStand2$IMS))])) # 7 subjects missing (83 total)
length(unique(pdpStand2$Subject[!(is.na(pdpStand2$IMS)) &
pdpStand2$Observer == "Present"])) # 41 subjects
length(unique(pdpStand2$Subject[!(is.na(pdpStand2$IMS)) &
pdpStand2$Observer == "Absent"])) # 42 subjects
length(unique(pdpStand2$Subject[!(is.na(pdpStand2$IMS))])) # 7 subjects missing (83 total)
dat = pdpStand2[!(is.na(pdpStand2$IMS)) & !(is.na(pdpStand2$EMS)) & pdpStand2$Task == "AP",]
cor(dat$IMS, dat$EMS)
ggplot(pdpStand2, aes(Task, AResid, fill = Observer)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=.9), width = .2) +
#  facet_wrap(~Task*Observer) +
ggtitle("AResid") +
labs(x = "Task", y = "Task auto estimate") +
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
title = element_text(size=20),
axis.text.x  = element_text(vjust=0.5, size=16, color = "black")
)
ggplot(pdpStand2, aes(Task, MeanC, fill = Observer)) +
stat_summary(fun.y = mean, geom = "bar", position = "dodge") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", position = position_dodge(width=.9), width = .2) +
#  facet_wrap(~Task*Observer) +
ggtitle("MeanC") +
labs(x = "Task", y = "Task control estimate") +
theme(axis.title.x = element_text(face="bold", colour="#990000", size=20),
axis.title.y = element_text(face="bold", colour="#990000", size=20),
title = element_text(size=20),
axis.text.x  = element_text(vjust=0.5, size=16, color = "black")
)
aov(MeanC ~ Observer, data = pdpStand2[pdpStand2$Task == "AP",]) %>%
summary()
aov(MeanC ~ Observer*Task, data = pdpStand2[pdpStand2$Task == "AP",]) %>%
summary()
aov(MeanC ~ Observer*Task, data = pdpStand2) %>%
summary()
aov(AResid ~ Observer*Task + Error(Subject/(Task), data = pdpStand2) %>%
summary()
aov(AResid ~ Observer*Task + Error(Subject/(Task)), data = pdpStand2) %>%
summary()
aov(MeanC ~ Observer*Task + Error(Subject/(Task)), data = pdpStand2) %>%
summary()
aov(MeanC ~ Observer*Task + Error(Subject/(Task)), data = pdpStand2) %>%
summary()
aov(AResid ~ Observer*Task + Error(Subject/(Task)), data = pdpStand2) %>%
summary()
aov(MeanC ~ Observer*Task + Error(Subject/(Task)), data = pdpStand2) %>%
summary()
.34/143.46
aov(AResid ~ Observer*Task + Error(Subject/(Task)), data = pdpStand2) %>%
summary()
.34/(.43+109.56)
.34/(.34+109.56)
aov(MeanC ~ Observer*Task + Error(Subject/(Task)), data = pdpStand2) %>%
summary()
.34/(.34+143.46) # partial eta sq = .002
.34/(.34+109.56)
ggplot(pdpStand2, aes(IMS, MeanC, fill = Observer, col = Observer, pch = Observer)) +
geom_point() +
ggtitle("IMS/MeanC") +
facet_wrap(~Task) +
geom_smooth(method = "lm") +
labs(y = "Stand. MeanC estimate") +
theme(axis.title.x = element_text(face="bold", colour="#990000", size=28),
axis.title.y = element_text(face="bold", colour="#990000", size=28),
plot.title = element_text(size=28, vjust = 2, color = "white"),
plot.background = element_rect(fill = "black"),
axis.text.x  = element_text(vjust=0.5, size=16),
legend.title = element_text(size=16),
legend.text = element_text(size=16),
strip.text = element_text(size=24)
)
pdpStand3 = pdpStand2[,c(1:2, 4:7)] %>%
gather(Estimate,score,5:6)                   # "Task" is what previous column names go into
ggplot(pdpStand2, aes(IMS, MeanC, fill = Observer, col = Observer, pch = Observer)) +
geom_point() +
ggtitle("IMS/MeanC") +
facet_wrap(~Task) +
geom_smooth(method = "lm") +
labs(y = "Stand. MeanC estimate") +
theme(axis.title.x = element_text(face="bold", colour="#990000", size=28),
axis.title.y = element_text(face="bold", colour="#990000", size=28),
plot.title = element_text(size=28, vjust = 2, color = "white"),
plot.background = element_rect(fill = "black"),
axis.text.x  = element_text(vjust=0.5, size=16),
legend.title = element_text(size=16),
legend.text = element_text(size=16),
strip.text = element_text(size=24)
)
ggplot(pdpStand2, aes(IMS, AResid, fill = Observer, col = Observer, pch = Observer)) +
geom_point() +
ggtitle("IMS/AResid") +
facet_wrap(~Task) +
geom_smooth(method = "lm") +
labs(y = "Stand. AResid estimate") +
theme(axis.title.x = element_text(face="bold", colour="#990000", size=28),
axis.title.y = element_text(face="bold", colour="#990000", size=28),
plot.title = element_text(size=28, vjust = 2, color = "white"),
plot.background = element_rect(fill = "black"),
axis.text.x  = element_text(vjust=0.5, size=16),
legend.title = element_text(size=16),
legend.text = element_text(size=16),
strip.text = element_text(size=24)
)
lm(AResid ~ IMS*Observer, data = pdpStand2[pdpStand2$Task == "WIT",]) %>%
summary()
lm(AResid ~ IMS*Observer, data = pdpStand2[pdpStand2$Task == "AP",]) %>%
summary()
lm(AResid ~ IMS*Task, data = pdpStand2[pdpStand2$Observer == "Absent",]) %>%
summary()
pdpStand3 = pdpStand2[,c(1:2, 4:7)] %>%
gather(Estimate,score,5:6)                   # "Task" is what previous column names go into
head(pdpStand2)
lm(AResid ~ IMS*Observer*Task, data = pdpStand2) %>%
summary()
lm(MeanC ~ IMS*Observer*Task, data = pdpStand2) %>%
summary()
head(pbStand)
head(pbLong)
for (i in unique(pbLong$Subject)) {
pbStand$IMS[pbStand$Subject == i] = dat.trial$IMS[dat.trial$Subject == i &
dat.trial$SubTrial == 1 &
dat.trial$blockName == "WIT"]
pbStand$EMS[pbStand$Subject == i] = dat.trial$EMS[dat.trial$Subject == i &
dat.trial$SubTrial == 1 &
dat.trial$blockName == "WIT"]
}
for (i in unique(pbLong$Subject)) {
pbLong$IMS[pbLong$Subject == i] = dat.trial$IMS[dat.trial$Subject == i &
dat.trial$SubTrial == 1 &
dat.trial$blockName == "WIT"]
pbLong$EMS[pbLong$Subject == i] = dat.trial$EMS[dat.trial$Subject == i &
dat.trial$SubTrial == 1 &
dat.trial$blockName == "WIT"]
}
head(pbLong)
unique(pbLong$Task)
mean(pbLong$pbStand)
ggplot(pbLong, aes(IMS, pbStand, fill = Observer, col = Observer, pch = Observer)) +
geom_point() +
ggtitle("IMS/perfBias") +
facet_wrap(~Task) +
geom_smooth(method = "lm") +
labs(y = "Stand. perfBias estimate") +
theme(axis.title.x = element_text(face="bold", colour="#990000", size=28),
axis.title.y = element_text(face="bold", colour="#990000", size=28),
plot.title = element_text(size=28, vjust = 2, color = "white"),
plot.background = element_rect(fill = "black"),
axis.text.x  = element_text(vjust=0.5, size=16),
legend.title = element_text(size=16),
legend.text = element_text(size=16),
strip.text = element_text(size=24)
)
lm(pbStand ~ IMS*Observer*Task, data = pbLong) %>%
summary()
lm(MeanC ~ IMS*Observer, data = pdpStand2[pdpStand2$Task == "WIT",]) %>%
summary()
lm(MeanC ~ IMS*Observer, data = pdpStand2[pdpStand2$Task == "AP",]) %>%
summary()
lm(MeanC ~ IMS*Observer*Task, data = pdpStand2) %>%
summary()
# IMS and MeanC separated by observer
ggplot(pdpStand2, aes(IMS, MeanC, fill = Observer, col = Observer, pch = Observer)) +
geom_point() +
ggtitle("IMS/MeanC") +
facet_wrap(~Task) +
geom_smooth(method = "lm") +
labs(y = "Stand. MeanC estimate") +
theme(axis.title.x = element_text(face="bold", colour="#990000", size=28),
axis.title.y = element_text(face="bold", colour="#990000", size=28),
plot.title = element_text(size=28, vjust = 2, color = "white"),
plot.background = element_rect(fill = "black"),
axis.text.x  = element_text(vjust=0.5, size=16),
legend.title = element_text(size=16),
legend.text = element_text(size=16),
strip.text = element_text(size=24)
)
lm(MeanC ~ IMS*Observer*Task, data = pdpStand2) %>%
summary()
lm(MeanC ~ IMS*Observer, data = pdpStand2[pdpStand2$Task == "WIT",]) %>%
summary()
lm(MeanC ~ IMS*Observer, data = pdpStand2[pdpStand2$Task == "AP",]) %>%
summary()
lm(MeanC ~ IMS*Observer, data = pdpStand2[pdpStand2$Task == "WIT",]) %>%
summary()
lm(MeanC ~ IMS*Observer, data = pdpStand2[pdpStand2$Task == "AP",]) %>%
summary()
lm(MeanC ~ IMS*Observer, data = pdpStand2[pdpStand2$Task == "WIT",]) %>%
summary()
lm(MeanC ~ IMS*Observer*Task, data = pdpStand2) %>%
summary()
lm(AResid ~ IMS*Observer*Task, data = pdpStand2) %>%
summary()
lm(AResid ~ IMS*Observer, data = pdpStand2[pdpStand2$Task == "WIT",]) %>%
summary()
lm(AResid ~ IMS*Observer, data = pdpStand2[pdpStand2$Task == "AP",]) %>%
summary()
ggplot(pdpStand2, aes(IMS, AResid, fill = Observer, col = Observer, pch = Observer)) +
geom_point() +
ggtitle("IMS/AResid") +
facet_wrap(~Task) +
geom_smooth(method = "lm") +
labs(y = "Stand. AResid estimate") +
theme(axis.title.x = element_text(face="bold", colour="#990000", size=28),
axis.title.y = element_text(face="bold", colour="#990000", size=28),
plot.title = element_text(size=28, vjust = 2, color = "white"),
plot.background = element_rect(fill = "black"),
axis.text.x  = element_text(vjust=0.5, size=16),
legend.title = element_text(size=16),
legend.text = element_text(size=16),
strip.text = element_text(size=24)
)
head(pdpStand2)
ggplot(pdpStand2[pdpStand2$Observer == "Present"], aes(IMS, AResid, fill = Task)) +
geom_point() +
ggtitle("IMS/AResid") +
#  facet_wrap(~Task) +
geom_smooth(method = "lm") +
labs(y = "Stand. AResid estimate") +
theme(axis.title.x = element_text(face="bold", colour="#990000", size=28),
axis.title.y = element_text(face="bold", colour="#990000", size=28),
plot.title = element_text(size=28, vjust = 2, color = "white"),
plot.background = element_rect(fill = "black"),
axis.text.x  = element_text(vjust=0.5, size=16),
legend.title = element_text(size=16),
legend.text = element_text(size=16),
strip.text = element_text(size=24)
)
ggplot(pdpStand2[pdpStand2$Observer == "Present",], aes(IMS, AResid, fill = Task)) +
geom_point() +
ggtitle("IMS/AResid") +
#  facet_wrap(~Task) +
geom_smooth(method = "lm") +
labs(y = "Stand. AResid estimate") +
theme(axis.title.x = element_text(face="bold", colour="#990000", size=28),
axis.title.y = element_text(face="bold", colour="#990000", size=28),
plot.title = element_text(size=28, vjust = 2, color = "white"),
plot.background = element_rect(fill = "black"),
axis.text.x  = element_text(vjust=0.5, size=16),
legend.title = element_text(size=16),
legend.text = element_text(size=16),
strip.text = element_text(size=24)
)
ggplot(pdpStand2[pdpStand2$Observer == "Absent",], aes(IMS, AResid, fill = Task)) +
geom_point() +
ggtitle("IMS/AResid") +
#  facet_wrap(~Task) +
geom_smooth(method = "lm") +
labs(y = "Stand. AResid estimate") +
theme(axis.title.x = element_text(face="bold", colour="#990000", size=28),
axis.title.y = element_text(face="bold", colour="#990000", size=28),
plot.title = element_text(size=28, vjust = 2, color = "white"),
plot.background = element_rect(fill = "black"),
axis.text.x  = element_text(vjust=0.5, size=16),
legend.title = element_text(size=16),
legend.text = element_text(size=16),
strip.text = element_text(size=24)
)
lm(AResid ~ IMS*Task, data = pdpStand2[pdpStand2$Observer == "Present",]) %>%
summary()
lm(AResid ~ IMS*Task, data = pdpStand2[pdpStand2$Observer == "Absent",]) %>%
summary()
lm(AResid ~ IMS*Task, data = pdpStand2[pdpStand2$Observer == "Absent",]) %>%
summary()
lm(AResid ~ IMS*Task, data = pdpStand2[pdpStand2$Observer == "Present",]) %>%
summary()
ggplot(pdpStand3[pdpStand3$Observer == "Present",],
aes(score, AResid, fill = Task, col = Task, pch = Task)) +
geom_point() +
ggtitle("Observer present condition") +
labs(y = "Stand. AResid estimate") +
facet_wrap(~Estimate, scales = "free") +
geom_smooth(method = "lm") +
theme(axis.title.x = element_text(face="bold", colour="#990000", size=28),
axis.title.y = element_text(face="bold", colour="#990000", size=28),
plot.title = element_text(size=28, vjust = 2, color = "white"),
plot.background = element_rect(fill = "black"),
axis.text.x  = element_text(vjust=0.5, size=16),
legend.title = element_text(size=16),
legend.text = element_text(size=16),
strip.text.x = element_text(size = 16, face="bold")
)
ggplot(pdpStand2[pdpStand2$Observer == "Present",], aes(IMS, AResid, fill = Task)) +
geom_point() +
ggtitle("IMS/AResid") +
#  facet_wrap(~Task) +
geom_smooth(method = "lm") +
labs(y = "Stand. AResid estimate") +
theme(axis.title.x = element_text(face="bold", colour="#990000", size=28),
axis.title.y = element_text(face="bold", colour="#990000", size=28),
plot.title = element_text(size=28, vjust = 2, color = "white"),
plot.background = element_rect(fill = "black"),
axis.text.x  = element_text(vjust=0.5, size=16),
legend.title = element_text(size=16),
legend.text = element_text(size=16),
strip.text = element_text(size=24)
)
ggplot(pdpStand2, aes(IMS, AResid, fill = Observer, col = Observer, pch = Observer)) +
geom_point() +
ggtitle("IMS/AResid") +
facet_wrap(~Task) +
geom_smooth(method = "lm") +
labs(y = "Stand. AResid estimate") +
theme(axis.title.x = element_text(face="bold", colour="#990000", size=28),
axis.title.y = element_text(face="bold", colour="#990000", size=28),
plot.title = element_text(size=28, vjust = 2, color = "white"),
plot.background = element_rect(fill = "black"),
axis.text.x  = element_text(vjust=0.5, size=16),
legend.title = element_text(size=16),
legend.text = element_text(size=16),
strip.text = element_text(size=24)
)
ggplot(pdpStand2[pdpStand2$Observer == "Present",], aes(IMS, AResid, fill = Task)) +
geom_point() +
ggtitle("IMS/AResid") +
#  facet_wrap(~Task) +
geom_smooth(method = "lm") +
labs(y = "Stand. AResid estimate") +
theme(axis.title.x = element_text(face="bold", colour="#990000", size=28),
axis.title.y = element_text(face="bold", colour="#990000", size=28),
plot.title = element_text(size=28, vjust = 2, color = "white"),
plot.background = element_rect(fill = "black"),
axis.text.x  = element_text(vjust=0.5, size=16),
legend.title = element_text(size=16),
legend.text = element_text(size=16),
strip.text = element_text(size=24)
)
ggplot(pdpStand2[pdpStand2$Observer == "Present",], aes(IMS, AResid, fill = Task, color = Task, pch = Task)) +
geom_point() +
ggtitle("IMS/AResid") +
#  facet_wrap(~Task) +
geom_smooth(method = "lm") +
labs(y = "Stand. AResid estimate") +
theme(axis.title.x = element_text(face="bold", colour="#990000", size=28),
axis.title.y = element_text(face="bold", colour="#990000", size=28),
plot.title = element_text(size=28, vjust = 2, color = "white"),
plot.background = element_rect(fill = "black"),
axis.text.x  = element_text(vjust=0.5, size=16),
legend.title = element_text(size=16),
legend.text = element_text(size=16),
strip.text = element_text(size=24)
)
